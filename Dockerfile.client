# -----------------------------
# Stage 1: Builder
# -----------------------------
    FROM node:20-slim AS builder

    RUN npm install -g pnpm@9.15.4 && \
        apt-get update && \
        apt-get upgrade -y && \
        apt-get install -y \
            git python3 python3-pip curl node-gyp ffmpeg \
            libtool-bin autoconf automake libopus-dev \
            make g++ build-essential \
            libcairo2-dev libjpeg-dev libpango1.0-dev \
            libgif-dev openssl libssl-dev libsecret-1-dev && \
        apt-get clean && \
        rm -rf /var/lib/apt/lists/*
    
    RUN ln -sf /usr/bin/python3 /usr/bin/python
    
    WORKDIR /app
    
    COPY . .
    RUN pnpm install --no-frozen-lockfile
    RUN pnpm run build && pnpm prune --prod
    
    # -----------------------------
    # Stage 2: Final (Runtime)
    # -----------------------------
    FROM node:20-slim
    
    RUN npm install -g pnpm@9.15.4 && \
        apt-get update && \
        apt-get install -y git python3 ffmpeg && \
        apt-get clean && \
        rm -rf /var/lib/apt/lists/*
    
    WORKDIR /app
    
    # Copy from builder stage
    COPY --from=builder /app/package.json ./
    COPY --from=builder /app/pnpm-workspace.yaml ./
    COPY --from=builder /app/.npmrc ./
    COPY --from=builder /app/turbo.json ./
    COPY --from=builder /app/node_modules ./node_modules
    COPY --from=builder /app/client ./client
    COPY --from=builder /app/lerna.json ./
    COPY --from=builder /app/packages ./packages
    COPY --from=builder /app/scripts ./scripts
    COPY --from=builder /app/characters ./characters
    
    # Expose client port
    EXPOSE 5173
    
    # Client command
    CMD ["pnpm", "start:client"]
    